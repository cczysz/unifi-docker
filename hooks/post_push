#!/bin/bash

set -eu

function tag_branch {
  docker tag "${IMAGE_NAME}" "${DOCKER_REPO}:$1"
  docker push "${DOCKER_REPO}:$1"
}

function ci-get-unifi-version {
  UNIFI_CHANNEL="$1"
  ARG_ARCH="${2:-amd64}"

  curl -sSL "https://www.ubnt.com/downloads/unifi/debian/dists/${UNIFI_CHANNEL}/ubiquiti/binary-${ARG_ARCH:-amd64}/Packages.gz" \
    | zgrep Version | sed -rn 's/Version: ([[:digit:]].[[:digit:]].[[:digit:]]+)-.*/\1/p'
}

# For unofficial documentation, see: https://docs.docker.com/docker-cloud/builds/advanced/
# Available variables:
# - `SOURCE_BRANCH`: the name of the branch or the tag that is currently being tested.
# - `SOURCE_COMMIT`: the SHA1 hash of the commit being tested.
# - `COMMIT_MSG`: the message from the commit being tested and built.
# - `DOCKER_REPO`: the name of the Docker repository being built.
# - `CACHE_TAG`: the Docker repository tag being built. --> seems empty, renamed? it is still DOCKER_TAG, eventhough https://github.com/docker/docker.github.io/issues/2125
# - `IMAGE_NAME`: the name and tag of the Docker repository being built. (This variable is a combination of `DOCKER_REPO`:`CACHE_TAG`.)
#
# SHA_COMMIT=${SOURCE_COMMIT:0:8}

SHA_COMMIT="$(echo ${GIT_SHA1} | cut -b-8)"

if [[ "${SOURCE_BRANCH}" == "master" ]]; then
  CHANNEL_NAME="stable"
  CHANNEL_VERSION="$(ci-get-unifi-version ${CHANNEL_NAME} amd64)"
  CHANNEL_SHORT_VERSION="$(echo ${CHANNEL_VERSION} | cut -d. -f-2)"

  tag_branch "latest"
  tag_branch "${CHANNEL_VERSION}"
  tag_branch "${CHANNEL_VERSION}-s${SHA_COMMIT}"
  tag_branch "${CHANNEL_SHORT_VERSION}"
elif [[ "${SOURCE_BRANCH}" == "oldstable" ]]; then
  CHANNEL_VERSION="$(ci-get-unifi-version ${SOURCE_BRANCH} amd64)"
  CHANNEL_SHORT_VERSION="$(echo ${CHANNEL_VERSION} | cut -d. -f-2)"

  tag_branch "lts"
  tag_branch "${CHANNEL_VERSION}"
  tag_branch "${CHANNEL_VERSION}-s${SHA_COMMIT}"
  tag_branch "${CHANNEL_SHORT_VERSION}"
elif [[ "${SOURCE_BRANCH}" == "testing" ]]; then
  CHANNEL_VERSION="$(ci-get-unifi-version ${SOURCE_BRANCH} amd64)"
  CHANNEL_SHORT_VERSION="$(echo ${CHANNEL_VERSION} | cut -d. -f-2)"

  tag_branch "${CHANNEL_VERSION}"
  tag_branch "${CHANNEL_VERSION}-s${SHA_COMMIT}"
  tag_branch "${CHANNEL_SHORT_VERSION}"
fi
